@page "/products"
@using StockStore.Models
@using StockStore.Services

@inject IProductService ProductService

<h3>Product List</h3>

@if (products == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        @foreach (var product in products)
        {
            <div class="col-sm-12 col-md-4 col-lg-3">
                <div class="card">
                    <img class="card-img-top" src="@product.ImageUrl" alt="@product.Name" style="width:300px;" />
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <p class="card-text"><strong>Price:</strong> @product.Price.ToString("C")</p>
                        <a href="/product-details/@product.Id" class="btn btn-primary">View Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Sock> products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetProductsAsync();
    }
}
